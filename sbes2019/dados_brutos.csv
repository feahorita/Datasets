article;Após a leitura completa, o artigo deve ser excluído? ;Qual a afiliação dos autores do trabalho? ;Tipo de SoS;Quais as dominio de aplicação?;Quais as contribuições reportadas nas pesquisas? e.g., tecnica, modelo, notação, ferramenta, etc;Quais metodologias são empregadas para a definição do comportamento emergente?;Qual o nível de comportamento emergente? (Meier, 1998);Como o comportamento emergente é descrito ou especificado? e.g., modelo conceitual, linguagem formal, etc ;Observações adicionais
Self-aware architecture to support partial control of emergent behavior;;Research Lab for Proactive Technologies Tallinn University of Technology, Estonian Academy of Sciences Tallinn, Estonia \;Collaborative;time-aware systems, and time- and location-aware systems;This paper suggests that the designer can improve system’s behavior by substituting (part of) regular interactions with smart mediated interactions that bolster up shared situation awareness of the system’s components and thus strengthens system’s capability to monitor and partially control its emergent behavior;The inserted mediated interactions enable simulation and foster capability for online engineering of system of systems – e.g. they enable to observe, analyze, and verify system’s behavior, and partially to control system’s emergent behavior.;Spooky emergence;"Interactions are assembled into proactive middleware that forms a backbone of system of systems.

In the case of technological applications mediated interactions could play multiple roles ... and attempt to detect emergent behavior.

Mediated interactions between agents have been earlier modeled by specific coordination artifacts (e.g. blackboards) 

The behavior of system of systems, and its model cannot be adequately analyzed relying on theory and tools stemming from Turing machine paradigm. In this paper the description and analysis is based on a prototype of a multistream interaction-centered computation model [1, 12].";"Proactive behavior means anticipatory, usually selfinitiated behavior striving to achieve (pre-set or dynamically selected) goals of the system. Cognitive and proactive behavior cannot always be controlled by applying conventional methods of computation, in many cases one needs to rely on non-classical paradigms of computation to analyze and verify the system of systems behavior 

The instant of appearance of emergent behavior and its impact on system’s overall performance cannot be predicted

This paper suggests extending the role of system’s architecture by enabling its active assistance in monitoring and conducting the system’s evolution (e.g. changes in interaction pattern between the components, modifying the composition of components and/or their functionality)

Prediction of the emergent behavior is not theoretically possible. Hence one can only partially control the impact of emergent behavior on the system (in order to keep a system within a security envelope). The sooner emer"
Synchronisation and Emergent Behaviour in Networks of Heterogeneous Systems: A Control Theory Perspective;;;Not defined;;In this chapter, we briefly describe a framework, which was originally and recently introduced in [15], for analysis and control of synchronisation of networked heterogeneous systems that is, with different parameters or even completely distinct dynamic models.;;not defined;;Among the latter, our technical results establish how the coupling strength affects synchronisation. Our analysis is carried out from a dynamical systems and stability theory viewpoint
Agent-Based Modeling for Systems of Systems;;Purdue University / School of Aeronautics and Astronautics / Center for Integrated Systems in Aerospace / Neil Armstrong Hall of Engineering;Directed;Littoral Operations Scenario. Littoral Operations Scenario. In order to illustrate the capabilities of agent-based modeling using DAF, we developed a simulation model to capture the performance of a Littoral Combat Ship (LCS) squadron in a scenario involving multiple threats.;"The purpose of this paper is to provide an understanding of the concept of systems of systems and the application of agent-based modeling to systems of systems.

We describe a simulation tool that provides a capability for agent-based modeling and simulation and describe the application of this tool to a system of systems.

Our agent-based LCS model provides a good insight into the workings of agent-based modeling and illustrates the systems-of-system nature of the problem at hand. A key characteristic of SoS problems is the unfolding of emergent behavior and properties during operations, because of the collective interaction among the system components

Our simulation of the LCS combat scenario illustrated the ability of agent-based modeling to capture non-intuitive behaviors that may arise due to the complex dynamics that occur in interconnected systems of agents that follow a behavioral set of rules.";"DAF can used to generate and evaluate a wide variety of architectures by defining the functional capabilities and behaviors of agents and the communication links between the agents. A representative implementation of DAF involves generating architecture alternatives, then simulating them to identify the configuration that provided the best balance of efficiency and reliability. ..... MY OPINION... configuration that provided also ""emergent behavior""...";Strong emergence;Purdue University developed the Discrete Agent Framework (DAF) for agent-based modeling in 2010 to enable easy application in multiple domains. Developed in object-oriented MATLAB, this engine provides the foundation to build agent-based simulation models to explore various architecture configurations for systems of systems and evaluate their performance. DAF also enables coordinated development, verification, and validation of the system of systems architecture through selective failure simulation.;"Agent-based modeling is an important tool for the engineering of systems of systems. Using this approach, systems engineers can investigate alternative architectures and gain an understanding of the impact of the behaviors of individual systems on emergent behaviors. 

Agent-based modeling is a natural choice for analyzing systems of systems because (1) it can capture emergent phenomena, (2) it provides a natural description of the system, and (3) it is flexible (Bonabeau 2002). 

Agent-based modeling provides a means of connecting micro-level behaviors to the macro level of a system whereas systems dynamics link system structures to system behavior (Schieritz and Milling 2003, Borshchev and Filippov 2004). The main difference is in the ability of agent-based models to capture emergent behaviors.

We describe a successful application of the concepts of agent-based modeling to a system of systems that has been in operation for multiple decades


Strong Emergence: An emergent property th"
Composition of Behavior Models for Systems Architecture;;"Naval Postgraduate School, Monterey, CA, USA
Naval Postgraduate School, Monterey, CA, USA
Naval Postgraduate School, Monterey, CA, USA";Acknowledged;Tha application domain of this paper is the architeture's modeling of system-of-systems.;Desenvolvimento da abordagem para modelagem de comportamentos: Monterey Phoenix (MP).;;Weak emergence;"A component’s behavior is central to stakeholder satisfaction. Behavior is the way in which a component acts on its own and responds to 
 timuli. For human-designed components, predicting functional and dysfunctional behavior during the design stage reduces the risk of stakeholder dissatisfaction and lack of engineering feasibility during the component’s operation. Modeling the behavior of components of complex natural and technological systems increases human understanding of overall systems behavior.

• Modeling a component in the context of its environment is necessary, but not sufficient, for predicting the full range of component 
 behaviors before physical implementation. Modeling the behavior of each interacting component rather than just one component’s interactions with external components has the potential to expose many more design flaws and tacit assumptions pertaining to the
component operation in a larger construct.

• Describing component interactions at a high level of";
Model-driven performance prediction of systems of systems;;"School of Computer ScienceUniversity of AdelaideAdelaideAustralia
LIUPPAUniversity of Pau and Pays AdourPauFrance
Department of DefenceDefence Science and Technology OrganisationCanberraAustralia";Not defined;Sistema de sistemas em geral.;Desenvolvimento de uma metodologia para previsão dos tipos de interação entre os sistemas constituintes do sistema de sistemas.;Definição de Meier. Embora use o apontamento de distribuição geográfica.;Spooky emergence;SoS are characterised by emergent behaviour resulting from the integration of independently operating and managed heterogeneous systems that are typically geographically distributed.;
The Role of Modeling and Simulation in System of Systems Development;;The Aerospace Corporation, Chantilly, VA, USA;Not defined;Energy Systems, Conventional, and Sustainable. Air Transportation Systems. Command, Control, Communications, Computing, Intelligence, Surveillance, and Reconnaissance Systems;uma ampla definição de SoS, tipos de systems de systems, classificação de comportamento emergente etc;"With this notion in mind, we can reclassify types of emergence in terms of how they map to models of the system.

Simple Emergence: An emergent property readily predicted (not just explained) by simplified models of the system’s components. The property can be readily and predictably produced in lower complexity, abstracted models of the actual system.

Weak Emergence: An emergent property that is readily and consistently reproduced in simulations of the system, but not in reduced complexity nonsimulation models. It can be understood through reduced complexity models of the system after observation, but not consistently predicted in advance.

Strong Emergence: An emergent property that is consistent with the known properties of the system’s components but which is not reproduced in any simplified model of the system. Direct simulations of the system may reproduce the emergent property but do so only inconsistently and with little pattern to where they do so and where they fail. Reduced";not defined;linguagem formal por meio de classificação de níveis de comportamento emergente;Este é o capítulo do livro do Maier que é utilizado como referência para tipos de comportamento emergente
Bigraph-Ensured Interoperability for System(-of-Systems) Emergence;;Communications Engineering, Department of Information Systems Johannes Kepler University Linz;Collaborative;An air cargo information system including different routes that are handled in accordance with their contextual conditions (i.e., weather alerts) were shown.;In this paper, we have proposed bigraph-based representation that suggests a SoS perspective on distributed application systems. This approach is not only capable of ensuring interoperability among autonomous systems, but also al-lows for emergent behavior.;"System interoperability is required for SoS behavior to be emergent (cf. [3] and [6]). Bigraphs, in that context, allow preserving interoperability among systems, both from a structural and behavior perspective (cf. [8] and [11])

For behavior specification, bigraphical reactive systems allow the definition of reaction rules each consisting of two parts, a redex and a reactum. The redex defines the bigraph to be changed, whereas the reactum represents the changed bigraph.

The delta between the redex and the reactum therefore describes the set of changes in terms of the bigraph’s structure that is required to be performed upon the system.

The behavior and therefore structural changes in system interaction is re-flected by the bigraphical reactive system. Using the same concepts as for rep-resenting interaction, reaction rules allow describing changes in interaction by means of adaptations in the structural interaction pattern. Each transition is encapsulated in a reaction rule that, w";Simple emergence;Bigraph-based interoperability is then introduced, as representation approach (cf. Section 3) enabling concerted emergence of SoS based on modeling the structure and behavior of cross-system interaction (cf. Section 4).;"### => SIMPLE EMERGENTE: An emergent porperty readily predicted (not just explained) by simplified models of the systems's components. The property can be readily and predctably produced in lower complexity, abstrated models for teh actual system.

In addition to context-sensitive system interaction, novel behavior can also emerge when bigraphical structures and reaction rules are orchestrated across systems. In this case, interaction patterns evolve that are not provided by a single system, but rather are combined results of interaction. Consider a supply system including its sub-system that appear during run time in order to opti-mize delivery routes. In this way, federated systems can optimize their behavior with the aid of currently available systems without having knowledge of these systems beforehand

### => Collaborative: The component systems must, more or less, voluntarily collaborate to fulfill the agreed upon central purposes.
An air cargo information system including diffe"
Checking the architectural feasibility of Systems-of-Systems using formal descriptions;;"ICMC - Univ. de São Paulo, São Carlos, Brazil
IRISA - UMR CNRS / Univ. de Bretagne-Sud, Vannes, France
ICMC - Univ. de São Paulo, São Carlos, Brazil";Acknowledged;O domínio da aplicação é para a modelagem de sistema de sistemas.;"We investigate in this paper a novel formal approach to automatically check the feasibility of coalitions among constituent systems at run-time.

In this paper, we proposed a formal approach based on SosADL and Alloy, both formal languages, to automatically synthesize run-time SoS architectures from concrete constituents that participate in a given coalition.";Linguagem formal.;Strong emergence;O comportamento emergente é descrito com a associação de sistemas parte do Sistema de sistemas para cumprimento de algum requisito que cada parte individual não consegue cumprir.;Acho interessante manter este artigo, já que embora ela seja de visão arquitetural, a proposta dele é justamente os comportamentos emergentes e a viabilidade dos mesmos.
Classifying Emergent Behavior to Reveal Design Patterns;;"University of Southern California
The Aerospace Corporation";Not defined;The paper shows many domains, such as: Spontaneous Traffic Jam, Laminar vs Turbulent fluid flow, Locust Swarms etc. There is no a unique defined domain.;This research seeks to generate and compile a set of design patterns to enable systems engineers to quickly recognize emergent behavior in their system, find similar cases in other systems, and identify possible avenues to address the mitigation or inducement of such behavior in the future.;"Due to the disparate forms of emergence expressed, a natural way to approach this is not to deal with emergence as a whole, but to break it down into categories that can be more readily conceptualized and investigated. Thus classifications of emergence can be found in virtually any discussion of emergent phenomena. This paper surveys several of these methods of classification, discusses the different problems they seek to address, and proposes the development of a set of emergent behavior design patterns based upon a certain form of typology. The expectation is that these design patterns will enable practicing systems engineers and operators of systems to anticipate potential emergent behavior, more quickly identify it, and have ready access to tools to deal with it. Additionally, these patterns have potential use for education new entrants to the field.

The first step towards developing the proposed design patterns is to generate a typology of emergent behavior, a set of common
causa";not defined;"towards design patterns to enable systems engineers to quickly recognize emergent behavior in their system

Basic systems, like mechanical watches, were downgraded to the simple category. The weak category was reserved for behavior that is consistently predictable using simulations of equal complexity to the actual system, but not with more abstract models. Most systems studied using agent-based models would fall into this category. Strong emergence is now a behavior whose general causal chain can be traced down to the component level, but simulations fail to consistently replicate. An excellent example of this is financial bubbles, which are easily explained on evening news, but resist accurate real world predictions and diagnoses. Lastly spooky emergence refers to all system-level behavior that is flatly inexplicable and unpredictable using current scientific knowledge, such as conscious thought.";"Having only two categories in a taxonomy is somewhat limiting, however, and thus Maier expanded these two categories into simple, weak, strong, and spooky emergence, while making the emphasis on simulation and prediction even more explicit [7]

While such systems of classification are quite useful, they focus on describing the system as a whole, rather than specific behaviors which is the subject of this research.

In this research, design patterns are used to refer to a subset of design principles.

Designers can use these patterns to help
anticipate emergent behavior and adjust their plans to either encourage or discourage the development of emergent
behavior once the system is put into operation. 

Both operators and analysts can use these patterns to more quickly identify and react to emergent behavior in their systems. This is line with the Cynefin framework’s suggest course of action “Probe-Sense-Respond” in the complex domain [38]."
A Model-based Approach Towards the Building of Trustworthy Software-intensive Systems-of-systems;;"University of Sao Paulo, São Carlos, Brazil
IRISA-UMR CNRS/Universite de Bretagne-Sud, Vannes, France";Not defined;often supporting missions to critical domains, such as smart traffic control and emergency and crisis management [5];"This PhD project is intended to contribute to validation of dynamic properties of SoS, that is, dynamic architecture and emergent behaviors, specified with an ADL especially tailored for this purpose with formal foudations, and to provide subsidies for the verification of dynamic properties.

this paper adressess some gaps identified in the literature are highlighted to be addressed

- Lack of ADL that deal with representation and validation of emergent behaviors of software architectures of SoS;
- Lack of approaches that deal with verification of both dynamic architecture and emergent behaviors of SoS;
- Lack of ADL that deal with specification of dynamic software architecture of SoS in which constituents are not known at design-time;";"my hypothesis is that a model-based (MB) approach can support V&V activities of dynamic properties of SoS,
making them trustworthy. My claim is that a MB approach can aid this endeavor because it (i) incentives the creation and
adoption of software specifications expressed as models, and (ii) relies on these models to automatize V&V activities by using simulation, test cases, formal validation and verification, bringing precision for V&V and (iii) enables the prediction of the SoS behavior and dynamics under environmental conditions [8], [9].

The SosADL2DEVS model transformation was used as basis to generate simulation models, complementing the static software architectural description of SoS expressed in SosADL with a dynamic view. We established a method to validate a specific type of emergent behavior in a case study. This approach still requires some refinements.";Weak emergence;This PhD project is intended to contribute to validation of dynamic properties of SoS, that is, dynamic architecture and emergent behaviors, specified with an ADL especially tailored for this purpose with formal foudations, and to provide subsidies for the verification of dynamic properties.;"O artigo apresenta gaps na literatura e planos para solucionar esses gaps, talvez ele poderia ser excluído porque ""comportamento emergente não é o foco da pesquisa (foca em pesquisa formas de tornar SoS mais confiáveis) mas levanta questões importantes sobre comportamento emergente que podem ser úteis para outros trabalhos.

#########
WEAK EMERGENCE => 

The SosADL2DEVS model transformation was used as basis to generate simulation models, complementing the static software architectural description of SoS expressed in SosADL with a dynamic view. We established a method to validate a specific type of emergent behavior in a case study. This approach still requires some refinements."
Harnessing Emergence: The Control and Design of Emergent Behavior in System of Systems Engineering;;"Integrity Systems and Solutions, LLC  Colorado Springs, CO 80915
Dunip Technologies, LLC Littleton, CO 80162";Directed;Modelagem de comportamentos emergentes.;Aplicando a teoria de Controle, é possível classificar e utilizar abordagens de Engenharia de Controle para garantir o comportamento do software em ambientes reais e simulados.;"When the knowledge of the parts is so complete, the prediction [of the behavior of the whole] can also be complete, and no extra property can emerge. Often, however, the knowledge is not, for whatever reason, complete . . . and a new property can, if we please, be said to  ""emerge"".";not defined;Emergent behavior is the lack of understanding of the system.;
Towards an understanding of emergence in systems-of-systems;;"Institut für Technische Informatik, Vienna University of Technology, 1040 Vienna, Austria
Institut für Technische Informatik, Vienna University of Technology, 1040 Vienna, Austria
Institut für Technische Informatik, Vienna University of Technology, 1040 Vienna, Austria
Resiltech S.R.L., Piazza Nilde Iotti 25, Pontedera, Italy
Dipartimento di, Matematica e Informatica, Università di Firenze";Not defined;Improve the understanding about emergent behaviors.;After a brief elaboration on the literature of emergence this paper gives a tentative definition of emergence in multi-level systems.;Formal definition as a phenomena.;Spooky emergence;Emergence is a systemic phenomenon in an System-of-Systems. It can't be divided in isolated parts and behaviors.;
Towards a Reference Architecture for Large-Scale Smart Grids System of Systems;;"CITSEM-Technical University of Madrid (UPM) Madrid, Spain 
Indra Software Labs Madrid, Spain";Not defined;Energy generation from smart grids.;In this paper, we present an architecture for Large-Scale Smart Grid SoS based on our previous experience in several industrial projects. This architecture decomposes these two dimensions into software components that support the behavior management of each system and the emergent behavior that leverage their interactions;This architecture decomposes these two dimensions into software components that support the behavior management of each system and the emergent behavior that leverage their interactions.;not defined;Pieces that compose system layers. And all the pieces together achieve the goals.;
Enabling emergent behavior in systems-of-systems through bigraph-based modeling;;"Department of Business Information Systems Communications Engineering, Johannes Kepler University, Linz, Austria
Department of Business Information Systems Communications Engineering, Johannes Kepler University, Linz, Austria";Not defined;Emergent behavior in general system-of-systems.;"This paper is an initial attempt for such a modeling approach. Bigraphs have been introduced and conceptually transferred for the purpose of
modeling of SoS.";Bigraphs-based modeling to guarantee emergent behavior.;not defined;The emergent behavior is described in formal language.;
Validating Emergent Behavior in Complex Systems;;The University of Adelaide, Adelaide, Australia;Not defined;Flock of Birds model;O artigo reporta várias contribuições de outros artigos. A principal contribuição do artigo é propor um processo de validação de comportamento emergente em duas etapas que consiste na identificação do comportamento emergente e na comparação do comportamento emergente do sistema e análise (sob validação) com um modelo de referencia (um SoS com um comportamento emergente já identificado e mapeado).;"We propose to divide the validation step into two main steps (identifying emergent behavior and behavior comparison):

- identifying emergent behavior: techniques that could be used to identify that the system exhibits an emergent property. 
In order for the behavior comparison to be effective, detailed information about the system must be recorded. This includes:

* 1.system states—all system states and their evolution over time must be recorded 
* 2.interactions—both direct and indirect (see Chan 2011b) interactions must be recorded, including entity states before and after the interaction;
* 3.emergent behavior causes—depending on the methods used in the behavior com-parison, the causes of emergent behaviors, in terms of micro-properties, would have to be recorded. This would be the case if Bayesian classification were to be employed for comparison. 

- behavior comparison: a formal representation of the model is compared with a reference model using graph-based techniques. The hyp";Weak emergence;using interaction graphs and Hausdorff Distances to compare between two emergent properties in the Flock of Birds model (domain).;"Apesar do domínio da aplicação ser ""Flock of Birds model"" a ideia pode ser certamente abstraída para Sistemas de Informação.

#### Nível do comportamento emergente #####
Uma vez que no processo de ""Identifying Emergent Behavior"" ... ""detailed information about the system must be recorded. This includes:
* 1.system states—all system states and their evolution over time must be recorded 
* 2.interactions—both direct and indirect (see Chan 2011b) interactions must be recorded, including entity states before and after the interaction;
* 3.emergent behavior causes—depending on the methods used in the behavior com-parison, the causes of emergent behaviors, in terms of micro-properties, would have to be recorded. This would be the case if Bayesian classification were to be employed for comparison. 

Dá definição: Weak Emergence: An emergent property that is readily and consistently reproduced in simulations of the system, but not in reduced complexity nonsimulation models. It can be understoo"
Simulating systems of systems using situation/reaction paradigm;;"LSI, Faculty of Electronics and Computer Science, 
University of Science and Technology Houari Boumediene, Algiers, Algeria
IRISA, Université Bretagne Sud, Vannes, France";Directed;Telediabetes system - health care home system - telemedicine systems (consist in monitoring patients into their home);"- we propose an approach for constructing a simulated SoS which mainly allows the identification of emerging misbehaviors. A simulated SoS constructed with our approach promotes dynamic simulations. Thus, the definition of the SoS must be centered on its most stable part in order to facilitate dynamic changes as much as possible.

- The SoS Simulation Framework (SoS_SF) has been implemented using Drools. 

- Our main purpose is to propose a way to construct simulated SoS which allows the identification of emergent misbehavior.  The aim of this work was not to find all the emerging behavior , but to show that our approach makes possible the identification of emerging misbehaviors.

 - The objective of this study concerns at the first place the construction of a simulated SoS from heterogeneous simulated systems, and then figure out whether this collaboration generate undesirable emergent behaviors beside of the desirable ones.

- We proposed a SoS simulation approach (SoS_FS) based on a";"- SoS operate in a naturally evolving environment (systems may disappear while others appear). This makes it even more difficult to master emerging behaviors during the construction of the SoS. In system engineering, simulation is considered as the best way to handle emergent behaviors.

- The simulation should be realistic enough to allow identification of emerging behaviors. Thus, we must be able to dynamically add or remove systems to the SoS. This implies the emergence of new behaviors dynamically during the execution of the SoS

- We propose to inspect the SoS states to detect and try to master the emergent behaviors. We define the SoS State as a view on the SoS at a precise moment of its execution/simulation. Formally it consists of theset of facts describing the SoS in the same time frame";Weak emergence;"- We propose a conceptual model for modeling the mission and its environment. During the stimulation of the SoS, all the facts will be kept in a log file with their dating. The identification of emergent misbehaviors will be achieved thanks to invariants checking on all the states that the SoS will pass through. 

- During the runtime, the state changes are tracked and stored in a Log file. The study of the evolution of the fact basis, through Log file analysis, allows the SoS designer to adjust the mission [..] after runtime step, and is about identifying the impact of the emergent behavior on the fulfillment of the mission. The designer of the SoS can refine the definition of the mission while exploiting favorable emergent behaviors and avoiding unfavorable ones.

- The emerging behavior is that which results from the coexistence of several systems in a same environment. We distinguish two kinds of emergent behaviors. Good behavior which are beneficial for the accomplishment of the m";
Refining Missions to Architectures in Software-intensive Systems-of-systems;;UFRN – Federal University of Rio Grande do Norte;Collaborative;A Flood Monitoring SoS;M2Arch, a model-based process to refine mission models in mKAOS towards the automatic generation of ar-chitecture descriptions in SosADL. M2Arch basically relies on a model-to-model (M2M) transformation [15] supported by an integrated tool for describing both mission models and architectural models. In addition, M2Arch comes with mod-eling tools sustaining the whole SoS design process, includ-ing validation and simulation of the resulting architectures.;"The Emergent Behavior Model in mKAOS specifies emergent behav-iors of the SoS and how these behaviors are related to the co-operation among constituent systems. 

- Specifically, M2Arch proposes using a simula-tion tool that will execute the architecture in a simulated en-vironment. The architect can follow the execution of the ar-chitecture and identify how constituent systems behave and if the expected emergent behaviors arise.  Moreover, it is neces-sary to identify possible undesirable behaviors and then mod-ify the models to avoid them.

- In the M2Arch approach, we have chosen a constructive ap-proach in which the refinement will produce a single archi-tecture capable of achieving the required missions and emerge the desired behaviors.

-Regarding future work, the most important one concerns the validation and verification activities. For validation pur-poses, we intend to implement a simulation mechanism for SosADL to enable the architect to observe emergent behav-iors and valid";not defined;comportamento emergente é descrito brevemente em linguagem formal.;
Formal Modeling Systems-of-systems Missions with mKAOS;;IRISA – UMR CNRS / University of South Britanny;Collaborative;a flood monitoring system for tropical areas;DynBLTL, a simulation-aimed for-malism in conformance with LTL. DynBLTL was built to support formalization and simulation of dynamic systems: systems that can change its architectural configuration at runtime, such as SoS. How-ever, we are aware that LTL is limited regarding expressiveness and in the future DynBLTL might be extended to meet any additional need of SoS.;"Since mKAOS was designed to be part of a development process, providing a mechanism to formally describe missions and emergent behaviors on the mission model allow the generation of constraints, that might be used in the verification of artifacts during the whole development process.

From interaction between constituent systems, the emergent behavior is defined in the Emergent Behavior Model. This model encompasses a single element: the Emergent Behavior, when overlapped with the Communicational Capabilities Model it is pos-sible to establish which set of cooperation interactions results on each behavior. (MKaos)

The work focuses on the definition of predcted desirable emergent behaviors (simple emergence) - Although it is not possible to describe non-predicted emergent behavior, it is possible to specify a non-desirable one.";Simple emergence;Comportamento emergente é definido por meio de definições formais utilizando o DynBLTL, um extensão do MKAOS... Besides the mission and emergent behavior formal definitions, we also introduced DynBLTL constructs into the mKAOS constraint system;
System of Systems Hazard Analysis Using Simulation and Machine Learning;;Department of Computer Science University of York, York, YO10 5DD, UK;Directed;Military system of systems;"Approach (técnica?) to performing hazard analysis, using simulation (multi-agent simulation) combined with machine learning. 

hypothesis is that the machine learning algorithm will learn rules that cover all the hazards that were identified by manual analysis.";"here an SoS Hazard was define as a ""Condition of an SoS configuration, physical or otherwise, that can lead to an accident"", 
[my interpretation] thus, in this case, an accident is an emergent behavior (misbehavior) of the SoS due to a given configuration.

SoS hazard analysis (methodoly) is the process of finding the conditions (configuration ... i.e crusters) that can lead an SoS to accidents (emergent misbehavior)

Describes the problems faced in SoS hazard analysis, multi-agent simulation as a possible solution";Weak emergence;"multi-agent simulation: “Multi-agent simulation is based on the idea that it is possible to represent in computerised form the behaviour of entities which are active in the world, and that it is possible to represent a phenomenon as the fruit of the interactions of an assembly of agents with their own operational autonomy.

such simulations “make it possible to model complex situations whose overall structures emerge from interactions between individuals”

multi-agent simulation, different lev-els of behaviour can be observed. Analysts can examine both the top-level emergent behaviour and the low-level interactions between individual agents. That is, the simula-tions can both predict overall behaviour and explain why it occurs";"- O artigo não fala explicitamente o termo comportamento emergente, mas conforme postulado acima, abstraí a ideia de análise de desastres (hazard analysis), como o processo de encontrar as condições (nesse caso os sistemas constituintes e suas relações) que geram um acidente (um comportamento emergente que não é desejado)

###### Level emergence #######
-  in a multi-agent simulation (used in the paper), different levels of behaviour can be observed. Analysts can examine both the top-level emergent behaviour and the low-level interactions between individual agents. That is, the simula-tions can both predict overall behaviour and explain why it occurs 
######
- Weak Emergence: An emergent property that is readily and consistently reproduced in simulations of the system, but not in reduced complexity nonsimulation models. It can be understood through reduced complexity models of the system after observation, but not consistently predicted in advance.
############################

######"
Agent-Based Modeling the Emergent Behavior of A System-of-Systems;;Queens University Belfast, Northern Ireland \ California State University Fullerton, CA  \ Southern California Edison;Virtual;Agent-based World Model SoS [..] The Agent-Based World Model of the interaction of autonomous, adaptive agents, interacting and collaborating characteristic to natural and human systems, is shown in Figure 3;Simple and conceptual agent-based models - were presented in this paper to simulate the four principles of emergent behaviors.;OpEMCSS (Operational Evaluation Modeling for Context Sensitive System) (Clymer 2007) simulates multi-agent systems that learn (Classifier Systems) and can perform fuzzy control. OpEMCSS will be used to simulate and study these four principles.;Strong emergence;"There are four Principles of Emergence introduced by (Hsu 2007). OpEMCSS (Operational Evaluation Modeling for Context Sensitive System) will be used to simulate and study these four principles.

The modeling efforts for emergent behavior presented in the above is conceptual and only at the beginning stage for this new endeavor to integrate emergent behavior into architecture models.";"- Conceptual agent-based modeling was presented to simulate the four principles of emergence.

- Understanding and responding to emergent SoS behavior – both positive and negative – is another important aspect of System-of-Systems
Engineering (SoSE). This will place a premium on the discovery and clever use of design principles that produce emergent behavior through voluntary collaboration. To address such challenges, traditional Systems Engineering is necessary but not sufficient for the engineering of a system-of-systems. 

- The behavior and/or performance of the SoS cannot be represented in any form that is simpler than the SoS itself. There is no simple way (i.e. simpler than the SoS itself) to relate the functions of the parts to the functions of the whole. The traditional hierarchical functional decomposition is no longer valid due to the non-linear characteristics of emergent behavior; however, since the emergent behavior is nonexistent in each component system, the hierarchica"
KR14 Emergent Behavior in Systems of Systems;;"Department of Systems Engineering (1 University Circle Monterey)
Naval Postgraduate School (1 University Circle Monterey)";Directed;"North American power grid. An electric power transmission system contains many components such as generators, transmission lines, transformers, and substations

the electrical power grid SoS that evolved under one set of operating principles, is now adapting to a new set of operating principles, with the emergence of new behaviors that include an increase in grid problems and failures, and unexpected increasing costs of electricity to consumers.";a system modeling and simulation approach that has promise of allowing systems engineers to analyze potential emergent behavior in large scale systems of systems;In our approach we model an agent as a rule-based algorithm, with some probability of design error, whose behavior is dependent on its inputs. We model a person as a probabilistic rule-based algorithm whose behavior is dependent on its inputs. We model a system function as a rule-based with some probability of design error, whose behavior is dependent on its inputs.;Weak emergence;"In order for an SoS to provide more capability than any of the individual systems, the systems have to interact and, therefore, the key to understanding and engineering an SoS, as well as understanding emergent behavior, is clearly defining the system-to-system interfaces. [...] We have developed an engineering and analysis methodology that aims at providing clear elucidation of interfaces. Interactions that might result in emergent behavior occur at interfaces between systems, between systems and operators and/or between systems and software agents...  [..] Following the idea in (Klir 1991) we can consider each of these interface elements as elements that seek to satisfy a goal governed by a set of rules whose inputs are provided through the SoS interactions with the goal seeking element. In some cases the goal-seeking element may have probabilistic behavior and/or may adapt to changing input conditions. 

Simple model (visual model) of a highly abstracted power grid system [..] The e";"In an SoS the component systems may achieve goals that they couldn’t otherwise by interactions with other component systems. Operators and software agents, considered here as SoS elements, can also interact with component systems as well as with one another. Emergent behavior occurs as a result of these interactions. 

In this paper we do not attempt to resolve the issue as to whether emergent behavior is always predictable and therefore amenable to systems engineering analysis, but we will restrict ourselves to discussing cases in which emergent behavior may be analyzable. 

[Power Grid] - If not managed properly, failure of a single element can cause the subsequent rapid failure of many additional elements, disrupting interconnected transmission systems over a broad geographic area. DIRECTED.

If systems engineers are to be successful in analyzing emergent behavior, an approach is needed that allows analysis of dynamic behavior of SoS, with the ability to model and simulate the impor"
10.2.2 Mathematical Models of Emergence in Complex Systems-of-systems;;William J Hughes Technical Center, Federal Aviation Administration;;;;;not defined;;
Modeling Emergent Behavior for Systems-of-Systems;;The Boeing Company;Virtual;Nenhum, não é dado exemplos de SoS, pois o artigo foca em apenas apresentar a questão de comportamento emergente;Apresentar comportamento emergente em Sistemas de Sistemas e propor métodos, técnicas para lidar com a questão.;"Neural  networks may be helpful in modeling the emergent behavior since the emergent behavior is complex and sometimes self-initiated.  Neural networks can provide an on-going learning capability to capture the initiating mechanisms of these emergent behaviors.  It is suggested here that we strongly consider the integration of agent-based modeling and neural network methodology with SysML.

Although there are many attempted emergent behavior modeling efforts in biological and human systems, to the authors’ knowledge there is no significant emergent behavior modeling efforts for system of systems architectures.

An accurate and complete system architecture model for a SoS is required to measure the existence, type, and level of emergent behavior of the SoS. 

The Principles of Emergence (derived from the existing literature discussing on this subject):

- Condition of Emergence: Emergence will not occur for a single independent system.  An avalanche condition (Goldstein 1999), or a cri";Strong emergence;"Não descreve nem específica, apenas lança espectativas:

Predicting the emergent behavior for a to-be-designed SoS will be a formidable challenge.  Emergent behaviors will have to be predicted and incorporated into architecture models.  Are we able to predict all the emergent behaviors?  Most likely our predictions will be probabilistic.   Agent-based modeling is expected to be used to examine emergent behavior as structure and pattern develop from the micro-level interactions.  Agent-based modeling focuses on how local interactions among agents serve to create larger and perhaps global structures and patterns of behavior. Agent-based modeling techniques need to be incorporated into SysML architecture models.  Many IF-and-THENs will be defined for the bondage situations between component systems.   In agent-based computer simulations, nearly random actions often result in highly structured emergent behavior.";"Esse artigo não propõe uma abordagem específica nem dá exemplos, ele apenas lança quais metodologias são necessários para se desenvolver arquiteturas de SoS. 

Unplanned, unexpected behavior is expected to emerge between component systems. The indirect and hidden influences of SoS are not present in single systems, and are the primary mechanism behind emergent behavior

####
Occasionally, a system with a high level of complexity, such as a very large number of interconnections and rules, that  also a moderate to high level of self-organization, self-modification, or such, will suddenly start to exhibit behaviors that were totally unpredicted by those people who designed and built the system. 
Complex systems often behave in unexpected ways that are not easily predictable from the behavior of their components due to emergent behavior -> Strong emergence
####"
2.2.2 Maintaining Emergence in Systems of Systems Integration: a Contractual Approach using SysML;;"Newcastle University, United Kingdom
Newcastle University, United Kingdom
Newcastle University, United Kingdom
Bang & Olufsen, Denmark";Collaborative;Validação de integração entre sistemas constituintes de um sistema de sistemas.;We have proposed a model-based approach to assist in the integration of new or modified constituent systems into an SoS. We leverage SysML and formal methods to enrich interface specifications with contracts that describe the expected and permitted behavior of constituents. Translation to the formal CML language enables the verification of emergent properties.;Diagramas de máquinas de estado, descrevendo os comportamentos assumidos pela integração das partes do sistema.;Spooky emergence;Linguagem formal e diagrama de StateChart.;
A Formal Approach to Autonomic Systems Programming: The SCEL Language;;"IMT Institute for Advanced Studies Lucca, Lucca, Italy
Università degli Studi di Firenze, Firenze, Italy
Università degli Studi di Firenze, Firenze, Italy
IMT Institute for Advanced Studies Lucca, Lucca, Italy";Virtual;Sistema de Sistemas;Lingugagem SCEL.;;Simple emergence;Behaviors describe how computations may progress and are modeled as processes executing actions, in the style of process calculi.;
Quantitative Reliability Assessment for Mobile Cooperative Systems;;Software Engineering (Informatik 11 )University of Erlangen-Nuremberg Erlangen Germany;Acknowledged;Sistemas multiagentes.;This article proposed a systematic approach to statistical testing for cooperative systems consisting of autonomous mobile agents. Based on Coloured Petri Net models of cooperative behaviour, it analysed different sources of randomness and defined an automatic test case generation procedure to derive independent cooperative scenarios according to a given operational profile.;Redes coloridas Petri.;Spooky emergence;Modelo conceitual de rede petri.;
Computational Intelligence Based Complex Adaptive System-of-System Architecture Evolution Strategy;;Missouri University of Science and Technology Rolla USA;Acknowledged;Modelagem e previsão de comportamentos emergentes no crescimento de um sistema de sistemas do tipo conhecido.;A negotiation model is proposed to help the SoS manger adapt his strategy based on system owners’ behavior.;;Strong emergence;Linguagem formal.;
Formally Describing Self-organizing Architectures for Systems-of-Systems on the Internet-of-Things;;IRISA - UMR CNRS / Univ. Bretagne Sud, France;Acknowledged;Internet of Things;Criação de uma abordagem para sistema de sistemas auto-organizado, de forma que o sistema consiga produzir seus comportamentos emergentes.;Linguagem formal.;Strong emergence;A behavior that stems from the interactions among constituents, but that cannot be predicted from behaviors of the constituents themselves.;
Federated Cloud computing as System of Systems;;"Colorado State University, Fulcrum Co., United States of America
Colorado State University, Fulcrum Co., United States of America
Colorado State University, Fulcrum Co., United States of America
Colorado State University, Fulcrum Co., United States of America";Acknowledged;Cloud Computing.;We suggest a physical architecture that simulates some of the main SoS emergent behavior to diminish unwanted outcomes while encouraging desirable results.;"Simulation - SoS Cost Impact
Simulation - SoS Compute Utilization Impact: Another cloud-federation emergent behavior handles the CSP resource utilization.";Weak emergence;An implementation of the Cloud Federation will introduce new operational issues rooted in the network communications between data centers operated by different Cloud Service Providers. One of the emergent behaviors will be massive data transmission amongst distributed infrastructures driven by affinity to users or cost of energy in certain regions for compute processing. There are a few insightful studies that lay the groundwork for such emergent behavior.;
Software architecture of self-organizing systems-of-systems for the Internet-of-Things with SosADL;;IRISA - UMR CNRS / Univ. Bretagne Sud, France;Collaborative;Internet of Things.;This paper presented the notion of self-organization, introduced the theory of self-organization and then refined this theory for SoS. In particular, it described how SosADL (based on the ?-Calculus enhanced with concurrent constraints, the ?- Calculus for SoS) enables the formal description of self- organizing SoS architectures in the IoT.;Linguagem formal.;Spooky emergence;Emergent behavior as a major characteristic.;
On the Emergent Behavior Oxymoron of System-of-Systems Architecture Description;;IRISA – UMR CNRS 6074, Univ. Bretagne Sud, Vannes, France;Not defined;Arquitetura de sistema de sistemas e modelagem do comportamento emergente.;Proposta da Linguagem de Descrição de Arquitetura. Um framework de desenvolvimento.;O autor se baseia nas referências de Maier.;not defined;Explicitly, Maier states that “The SoS performs functions and carries out purposes that do not reside in any constituent system. These behaviors are emergent properties of the entire SoS and cannot be localized to any constituent system. The principal purposes of the SoS are fulfilled by these behaviors;
Supporting design via the System Operational Dependency Analysis methodology;;"School of Aeronautics and AstronauticsPurdue UniversityWest Lafayette USA
School of Aeronautics and AstronauticsPurdue UniversityWest Lafayette USA";Not defined;O domínio de aplicação é me sistema de sistemas, visto que com a capacidade de uma modelagem estocástica ou determinística, é possível abordar os comportamentos emergentes. O artigo toma por exemplo de aplicação do modelo SODA uma guerra naval.;We propose a parametric model of the behavior of the system. The model called SODA.;"In systems engineering, the first step required to perform the desired analysis involves determining metrics that describe the features and the behavior of the system. When dealing with complex systems, however, metrics related to individual systems do not directly translate to an assessment of the overall behavior. Many authors recognize the importance of holistic high-level metrics (Rhodes et al. 2009; de Weck et al. 2012)";not defined;"The behavior of most systems designed and developed nowadays cannot always be directly evaluated based only on the behavior of the individual systems or subsystems. 

In this paper, we define complex systems as entities where interactions between the parts have a fundamental impact on the global behavior";
Exogenously Describing Architectural Emergent Behaviors of Systems-of-Systems with SosADL;;Univ. Bretagne Sud Vannes, France;Directed;Reconnaissance SoS based on Unmanned Aerial  Vehicles  (UAVs), a  Flood  Monitoring  and  Emergency Response  SoS;"SosADL -  (i) it is the  first full formal ADL  having  the  expressive  power for describing emergent behavior  in  software-intensive SoS architectures

SosADL - (ii) it  enables  to describe SoS software architectures producing  emergent  behavior abstractly, at  design-time, without knowing which will be the actual concrete systems in the  SoS  at  run-time,  and  then  to identify and  dynamically create  concrete  architectures grounded on  its  constraint solving mechanism

This paper presents the concepts and constructs of a novel Architecture Description Language  (ADL),  named SosADL, for exogenously describing architectural emergent behaviors of software-intensive SoSs

We  have  developed  an  SoS  Architecture  Development Environment,  named  SoS  Architect  Studio [24],  for supporting the architecture-centric  formal  development  of SoSs using SosADL.

a  novel  ADL specially conceived for formally describing the architecture of software-intensive SoSs from the viewpoi";"to architecturally describe an emergent behavior of  an  SoS,  we  will  define  micro-scale  behaviors  that,  by upward causation,  will  form  the  required  macro-scale, emergent  behavior (see [27] for  details  on  how  SosADL supports supervenience for describing emergent behaviors). 

SosADL supports  the  description  of  architectural  emergent  behaviors based on  the  principle of  supervenience. To specify  an emergent  behavior in  an  SoS architecture  description,  we define  micro-scale  behaviors  which  will  determine  the emergent macro-scale behavior.";Simple emergence;"Using the SoS Architecture Description Language  SosADL

using mediator declaration in SoSADL which make possible the emergence of an desired macro-scale bahavior of the SoS

exogenous architecture description completely relies  on mediators  and  not  at  all  on constituent systems (i.e. flockmates).  The  architecture  description  is essentially constituted  by  the  description  of  the mediators, without any need for having specific constituent systems";
System of systems architecture feasibility analysis to support tradespace exploration;;"Department of Systems Engineering, U.S. Military Academy, West Point, NY, 10996
Department of Systems Engineering, Naval Postgraduate School, Monterey, CA, 93940
Department of Systems Engineering, Naval Postgraduate School, Monterey, CA, 93940
Department of Systems Engineering, Naval Postgraduate School, Monterey, CA, 93940
Department of Systems Engineering, Naval Postgraduate School, Monterey, CA, 93940";;Mercados de comércio.;The SoS Architecture Feasibility Assessment Model (SoS-AFAM) assesses the feasibility of the physical communications, process, and organizational architectures of a SoS. The model applies algorithms based on the minimum requirements for viability relevant to all SoS such as connectivity and completeness. We present a case study to demonstrate how the algorithm can greatly prune the SoS tradespace of infeasible SoS design points, which can increase the efficiency of design exploration.;Não há.;not defined;Não é descrito.;
Practical modeling concepts for engineering emergence in systems of systems;;Department of Systems Engineering, Naval Postgraduate School, Monterey, CA, USA;Directed;The domain about the paper is handling with emergence behaviors in System-of-systems using modeling principles.;Uma modelagem na qual, as interações e comportamentos são separados para serem construídos de maneira correta.;Emergence is a product of the interactions among systems.;not defined;Os comportamentos são escritos em diagramas de BPM com percepções do usuário e seus estados, bem como o sistema e seus estados.;
Executable Modeling for System of Systems Architecting: An Artificial Life Framework;;"Proffesor of Engineering Management & Systems Engineering Department, Missouri University of Science & Technology, Rolla, MO, USA
Postdoctoral Research Fellow, Engineering Management & Systems Engineering Department, Missouri University of Science & Technology, Rolla, MO, USA";Not defined;System-of-Systems architecture.;tha aim of this paper is to present Artificial Life approaches as a methodology for understanding behavior of System-of-Systems.;;not defined;O comportamento emergente é descrito formalmente.;
The study of guided emergent behavior in system of systems requirement analysis;;National University of Defense Technology;Directed;ISAAC [13] (Irreducible Semi-Autonomous Adaptive Combat);We propose the computer simulation method to analyze the emergent behaviors for SoSs evolution research. Semi-autonomous Agents are taken as modeling the elements which interact, communicate and cooperate in such an environment where SoSs act.  method which using Semi-autonomous Agent based simulation to detect the emergent behaviors of SoSs.;"Guided Emergence - Guided emergence was coined by Madni [11], meaning is the ability to steer emergent behaviors in desired directions. Enhancing the good emergent behaviors to high level and reducing the bad emergent behavior effects is the core object of Guided emergence

Parallel Executive Experiment (PEE) is used to analyze the guided emergent behaviors of SoSs. There are two main parts in PEE, one is the virtual experiment (VE), the other is real world execution experiment (RE)....

We suppose this mechanism of PEE should create a framework in which emergence can flourish, and an agility to quickly detect and destroy unintended the emergent behaviors.";Simple emergence;Flow chart of guided SoS's capability emergence - showing the feedbacks between virtual experiment (VE) and real world execution experiment (RE). In VE many emergent behaviors burst out in different simulations accompany with the changing parameters and different scenarios. These emergent behaviors could be filtered by the Capability Requirement constraints. The beneficial emergence should be kept and others had to be eliminated. If no desire results can be detected in any simulations, we must change the the structure of SoSs or modify the relationships between elements greatly;
